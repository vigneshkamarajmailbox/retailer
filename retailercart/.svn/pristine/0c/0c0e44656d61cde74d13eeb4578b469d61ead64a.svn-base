import { Column, Entity, JoinColumn, ManyToOne, OneToMany, PrimaryColumn, Table } from 'typeorm';
import { SQLColumnType } from '../enum/column-type.enum';
import { AbstractModel } from './abstract.model';
import { TableName } from '../enum/table-name.enum';
import { CompanyAddress } from './company-address.entity';

@Entity({ name: TableName.COMPANY })
export class Company extends AbstractModel {
  @PrimaryColumn({ name: 'cmp_code', type: SQLColumnType.VARCHAR, length: 100, nullable: false })
  cmpCode: string;
  @Column({ name: 'cmp_name', type: SQLColumnType.VARCHAR, length: 100, nullable: false })
  cmpName: string;
  @Column({ name: 'org_type', type: SQLColumnType.VARCHAR, length: 100, nullable: false })
  orgType: string;
  @Column({ name: 'cmp_image_name', type: SQLColumnType.VARCHAR, length: 100, nullable: false })
  cmpImageName: string;
  @Column({ name: 'org_image_name', type: SQLColumnType.VARCHAR, length: 100, nullable: false })
  orgImageName: string;

  @OneToMany(() => CompanyAddress, (ca) => ca.cmpCode)
  @JoinColumn()
  company_address: CompanyAddress[];
}
