import { HttpStatus, Injectable } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { In, Repository } from 'typeorm';
import { CreateLanguageDto } from './dto/create-language.dto';
import { UpdateLanguageDto } from './dto/update-language.dto';
import { Language } from './entities/language.entity';

@Injectable()
export class LanguageService {

  constructor(
    @InjectRepository(Language)
    private languageRepository : Repository<Language>
  ){
    
  }


  create(createLanguageDto: CreateLanguageDto) {
    return 'This action adds a new language';
  }

  async findAll(): Promise<any> {
    let languageData = await this.languageRepository.find({select:{code:true,name:true}});
    return {
      statusCode : HttpStatus.OK,
      languages : languageData
    }
  }

  async fetchLanguageByCode(data){
    return await this.languageRepository.find({where:{code: In([data.code])}});
  }

  async findOne(code: string) {
    return await this.languageRepository.findOne({select:{code:true,name:true}, where:{code:code}});
  }

  update(id: number, updateLanguageDto: UpdateLanguageDto) {
    return `This action updates a #${id} language`;
  }

  remove(id: number) {
    return `This action removes a #${id} language`;
  }
}
