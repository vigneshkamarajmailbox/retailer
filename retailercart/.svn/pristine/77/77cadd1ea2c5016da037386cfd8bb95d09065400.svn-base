<div class="order-booking-screen " style="overflow-x: scroll">
  <div class="previous-order-filter-paginator">
    <mat-form-field class="previous-order-search-filter">
      <div class="order_detail_search_relative">
        <input matInput (keyup)="applyFilter()" [(ngModel)]="searchInput"
               placeholder="{{'PREVIOUS_ORDER.FILTER_SEARCH'|translate}}" #input>
        <i class="material-icons cursor order_detail_btn" (click)="clearFilter()">close</i>
      </div>
    </mat-form-field>
    <mat-paginator [hidePageSize]="true" [pageSize]="10" showFirstLastButtons></mat-paginator>
  </div>
  <table mat-table [dataSource]="dataSource" multiTemplateDataRows class="previous-order-table">
    <ng-container matColumnDef="{{column}}" *ngFor="let column of columnsToDisplay">
      <th mat-header-cell *matHeaderCellDef [style]="textAlign(true,column)"> {{column|translate}} </th>
      <td mat-cell *matCellDef="let element" [style]="textAlign(false, column)"
          style="cursor: pointer" (click)="showTab(column)">
        <span *ngIf="column !== 'PREVIOUS_ORDER.HEADER.ORDER_STATUS'">{{element[column]}}</span>
        <div *ngIf="column === 'PREVIOUS_ORDER.HEADER.ORDER_STATUS'">
          <span>{{element[column]}}</span>
        </div>
      </td>
    </ng-container>

    <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->
    <ng-container matColumnDef="expandedDetail">
      <td mat-cell *matCellDef="let element" [attr.colspan]="columnsToDisplay.length">
        <div [@detailExpand]="element == expandedElement ? 'expanded' : 'collapsed'">
          <mat-tab-group [(selectedIndex)]="selectedTab">
            <mat-tab label="{{'PREVIOUS_ORDER.DETAIL.ORDER_DETAIL'|translate}}">
              <table mat-table [dataSource]="element.details" multiTemplateDataRows class="previous-order-detail-table">
                <ng-container matColumnDef="{{column}}" *ngFor="let column of detailColumns">
                  <div *ngIf="column === 'PREVIOUS_ORDER.DETAIL.PRODUCT_NAME'">
                    <th class="w-200px" mat-header-cell *matHeaderCellDef [style]="textAlign(true,column)"> {{column|translate}} </th>
                    <td mat-cell *matCellDef="let element" [style]="textAlign(false,column)"> {{element[column]}} </td>
                  </div>
                  <div *ngIf="column !== 'PREVIOUS_ORDER.DETAIL.PRODUCT_NAME'">
                    <th class="w-75px" mat-header-cell *matHeaderCellDef [style]="textAlign(true,column)"> {{column|translate}} </th>
                    <td mat-cell *matCellDef="let element" [style]="textAlign(false,column)"> {{element[column]}} </td>
                  </div>
                </ng-container>
                <tr mat-header-row *matHeaderRowDef="detailColumns"></tr>
                <tr mat-row *matRowDef="let element; columns: detailColumns;"></tr>
              </table>
            </mat-tab>
            <mat-tab label="{{'PREVIOUS_ORDER.DETAIL.ORDER_TRACKER'|translate}}">
              <mat-vertical-stepper [linear]="false" selectedIndex="{{element.trackerSelectedIndex}}">
                <mat-step *ngFor="let track of element.tracker" editable="false" state="{{track.state}}">
                  <ng-template matStepLabel>
                    <div class="flex-column justify-content-between">
                      <span>{{track.text}}</span>
                      <span class="grey500">{{dataService.formatDateTime(track.time)}}</span>
                    </div>
                  </ng-template>
                </mat-step>

                <ng-template matStepperIcon="1">
                  <i class="material-icons font-size-large">filter_1</i>
                </ng-template>

                <ng-template matStepperIcon="2">
                  <i class="material-icons font-size-large">filter_2</i>
                </ng-template>

                <ng-template matStepperIcon="3">
                  <i class="material-icons font-size-large">filter_3</i>
                </ng-template>

                <ng-template matStepperIcon="4">
                  <i class="material-icons font-size-large">filter_4</i>
                </ng-template>

                <ng-template matStepperIcon="5">
                  <i class="material-icons font-size-large">filter_5</i>
                </ng-template>

                <ng-template matStepperIcon="6">
                  <i class="material-icons font-size-large">filter_6</i>
                </ng-template>

                <ng-template matStepperIcon="7">
                  <i class="material-icons font-size-large">filter_7</i>
                </ng-template>

                <ng-template matStepperIcon="8">
                  <i class="material-icons font-size-large">filter_8</i>
                </ng-template>

                <ng-template matStepperIcon="9">
                  <i class="material-icons font-size-large">filter_9</i>
                </ng-template>

                <ng-template matStepperIcon="done">
                  <i class="material-icons" style="color: black">done_all</i>
                </ng-template>

                <ng-template matStepperIcon="error">
                  <i class="material-icons font-size-large" style="color: white">warning</i>
                </ng-template>
              </mat-vertical-stepper>
            </mat-tab>
          </mat-tab-group>
        </div>
      </td>
    </ng-container>

    <tr mat-header-row *matHeaderRowDef="columnsToDisplay; sticky: true"></tr>
    <tr mat-row *matRowDef="let element; columns: columnsToDisplay;"
        (click)="expandedElement = expandedElement === element ? null : element">
    </tr>
    <tr mat-row *matRowDef="let row; columns: ['expandedDetail']" class="previous-order-expand-detail"></tr>
  </table>

  <div class="order-booking-add-cart-div">
    <div class="previous-order-report-footer-div">
      <div class="flex-row justify-content-between hidden-xs">
        <div class="flex-column justify-content-between">
          <span class="total-tax-scheme-value-size">
                {{'PREVIOUS_ORDER.FOOTER.TAX_VALUE'|translate}}
            : {{dataService.parseFloat(totTaxValue) | currency:app.currency:'symbol'}}
            </span>
          <span class="total-tax-scheme-value-size">
                {{'PREVIOUS_ORDER.FOOTER.DISC_VALUE'|translate}}
            : {{dataService.parseFloat(totSchemeValue) | currency:app.currency:'symbol'}}
          </span>
        </div>
        <span class="total-order-value-size">
            {{'PREVIOUS_ORDER.FOOTER.ORDER_VALUE'|translate}}
          : {{dataService.parseFloat(totOrderValue) | currency:app.currency:'symbol'}}
          </span>
      </div>
      <div class="text-left visible-xs">
          <span class="total-order-value-size">
              {{'PREVIOUS_ORDER.FOOTER.ORDER_VALUE'|translate}}
            : {{dataService.parseFloat(totOrderValue) | currency:app.currency:'symbol'}}
            </span>
        <div class="">
                <span class="total-tax-scheme-value-size">
                      {{'PREVIOUS_ORDER.FOOTER.TAX_VALUE'|translate}}
                  : {{dataService.parseFloat(totTaxValue) | currency:app.currency:'symbol'}}
                  </span>
          <span class="total-tax-scheme-value-size">
                      {{'PREVIOUS_ORDER.FOOTER.DISC_VALUE'|translate}}
            : {{dataService.parseFloat(totSchemeValue) | currency:app.currency:'symbol'}}
                </span>
        </div>
      </div>
    </div>
  </div>
</div>
